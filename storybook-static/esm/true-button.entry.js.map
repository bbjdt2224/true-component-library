{"file":"true-button.entry.js","mappings":";;;AAAA,MAAM,SAAS,GAAG,gvFAAgvF;;MCcrvF,MAAM;;;gBAI6B,SAAS;oBAID,GAAG;kBAItC,KAAK;oBAI6B,KAAK;qBAIA,QAAQ;;;EAShE,SAAS,CAAC,KAAK;IACX,IAAI,IAAI,CAAC,QAAQ,EAAE;MACf,KAAK,CAAC,cAAc,EAAE,CAAC;MACvB,OAAO;KACV;IAED,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;GAC5C;EAED,MAAM;IACF,QACI,EAAC,IAAI,IACD,KAAK,EAAE;QACH,cAAc,EAAE,IAAI,CAAC,SAAS;OACjC,mBACc,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,IAAI,IAC3C,IAAI,CAAC,UAAU,GAAG,WAAK,KAAK,EAAC,SAAS,GAAO,GAAG,IAAI,EACrD,cACI,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,EAClC,IAAI,EAAE,IAAI,CAAC,MAAM,KAAK,IAAI,GAAG,QAAQ,GAAG,QAAQ,IAChD,sBACI,IAAI,EAAE,IAAI,CAAC,QAAQ,EACnB,MAAM,EAAC,QAAQ,IACf,eAAa,CACA,EACjB,YAAM,IAAI,EAAC,KAAK,GAAQ,CACnB,CACN,EACT;GACL;;;;;;;","names":[],"sources":["src/components/buttons/button/button.scss?tag=true-button&encapsulation=shadow","src/components/buttons/button/button.tsx"],"sourcesContent":["@import '../../../styles/mixin/button';\r\n\r\n:host {\r\n    --height: 32px;\r\n    --font-size: 14px;\r\n    --font-weight: 500;\r\n    --padding: 0 20px;\r\n    --border-radius: 16px;\r\n\r\n    --min-width: max-content;\r\n    --button-transition: #{$button-transition};\r\n    --text-align: center;\r\n\r\n    --border-width: 0px;\r\n\r\n    // Primary action style\r\n    --color: var(--color-neutral-100);\r\n    --bg-color: var(--color-custom-brand-accent);\r\n    --border-color: transparent;\r\n\r\n    --color-hover: var(--color-custom-brand-accent-contrast);\r\n    --bg-color-hover: var(--color-custom-brand-accent-shade);\r\n    --border-color-hover: transparent;\r\n\r\n    --color-disabled: var(--color-tertiary);\r\n    --bg-color-disabled: var(--bg-color-primary);\r\n    --border-color-disabled: transparent;\r\n\r\n    display: inline-block;\r\n    position: relative;\r\n\r\n    .overlay {\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        background-color: rgba(0, 0, 0, 0.15);\r\n        border-radius: var(--border-radius);\r\n        z-index: 2;\r\n        cursor: pointer;\r\n    }\r\n\r\n    button {\r\n        @include button();\r\n\r\n        width: 100%;\r\n        min-width: var(--min-width);\r\n        height: 100%;\r\n        font-size: var(--font-size);\r\n        font-weight: var(--font-weight);\r\n        height: var(--height);\r\n\r\n        true-text-base {\r\n            --text-color: var(--color);\r\n        }\r\n\r\n        background-color: var(--bg-color);\r\n        border: var(--border-width) solid var(--border-color);\r\n\r\n        padding: var(--padding);\r\n        border-radius: var(--border-radius);\r\n        position: relative;\r\n\r\n        text-align: var(--text-align);\r\n\r\n        transition:\r\n            background-color var(--button-transition),\r\n            border var(--button-transition),\r\n            color var(--button-transition);\r\n    }\r\n}\r\n\r\n// Secondary Action Style\r\n:host([type=\"secondary\"]) {\r\n    --border-width: 2px;\r\n\r\n    --color: var(--color-secondary);\r\n    --bg-color: transparent;\r\n    --border-color: var(--bg-color-tertiary);\r\n\r\n    --color-hover: var(--color-primary);\r\n    --bg-color-hover: transparent;\r\n    --border-color-hover: var(--bg-hover-tertiary);\r\n\r\n    --color-disabled: var(--color-tertiary);\r\n    --bg-color-disabled: transparent;\r\n    --border-color-disabled: var(--bg-color-tertiary);\r\n}\r\n\r\n// Button: Danger\r\n// --------------------------------------------------\r\n:host([type=\"danger\"]) {\r\n    --color: var(--color-neutral-100);\r\n    --bg-color: var(--color-true-primary-red);\r\n    --border-color: var(--color-true-primary-red);\r\n\r\n    --color-hover: var(--color-true-primary-red-contrast);\r\n    --bg-color-hover: var(--color-true-primary-red-shade);\r\n    --border-color-hover: transparent;\r\n\r\n    --color-disabled: var(--color-tertiary);\r\n    --bg-color-disabled: var(--bg-color-primary);\r\n    --border-color-disabled: transparent;\r\n}\r\n\r\n:host(.activated) {\r\n    button:not([disabled]) {\r\n        --color: var(--color-hover);\r\n        --bg-color: var(--bg-color-hover);\r\n        --border-color: var(--border-color-hover);\r\n    }\r\n}\r\n\r\n@media (any-hover: hover) {\r\n    :host(:hover) {\r\n        button:not([disabled]) {\r\n            --color: var(--color-hover);\r\n            --bg-color: var(--bg-color-hover);\r\n            --border-color: var(--border-color-hover);\r\n        }\r\n    }\r\n}\r\n\r\n:host([disabled]) {\r\n    button {\r\n        --color: var(--color-disabled);\r\n        --bg-color: var(--bg-color-disabled);\r\n        --border-color: var(--border-color-disabled);\r\n    }\r\n}\r\n","import { Component, Element, h, Host, Listen, Prop } from '@stencil/core';\r\nimport { ActionType } from '../../../interface';\r\nimport { removeButtonFocus, trySubmitForm } from '../button-common';\r\nimport { ButtonTextSize } from './button.interface';\r\n/**\r\n * @virtualProp {\"light\" | \"dark\"} theme - The theme determines which platform styles to use.\r\n *\r\n * @slot - Content is placed in the default slot.\r\n */\r\n@Component({\r\n    tag: 'true-button',\r\n    styleUrl: 'button.scss',\r\n    shadow: true\r\n})\r\nexport class Button {\r\n    /**\r\n     * The intended action of the button (primary, secondary, destructive)\r\n     */\r\n    @Prop({ reflect: true }) type: ActionType = 'primary';\r\n    /**\r\n     * the size of the text to use in the button\r\n     */\r\n    @Prop({ reflect: true }) textSize: ButtonTextSize = 's';\r\n    /**\r\n     * Whether or not to render the button as a submit button\r\n     */\r\n    @Prop() submit = false;\r\n    /**\r\n     * `true` if the button is disabled and cannot be interacted with\r\n     */\r\n    @Prop({ mutable: true, reflect: true }) disabled = false;\r\n    /**\r\n     * How the button text should be aligned\r\n     */\r\n    @Prop({ reflect: true }) textAlign: 'center' | 'left' = 'center';\r\n    /**\r\n     * `true` if the overlay should be rendered over the button\r\n     */\r\n    @Prop({ reflect: true }) hasOverlay: boolean;\r\n\r\n    @Element() element!: Element;\r\n\r\n    @Listen('click')\r\n    hostClick(event) {\r\n        if (this.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        trySubmitForm(this.submit, this.element);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Host\r\n                style={{\r\n                    '--text-align': this.textAlign\r\n                }}\r\n                aria-disabled={this.disabled ? 'true' : null}>\r\n                {this.hasOverlay ? <div class='overlay'></div> : null}\r\n                <button\r\n                    disabled={this.disabled}\r\n                    onClick={e => removeButtonFocus(e)}\r\n                    type={this.submit === true ? 'submit' : 'button'}>\r\n                    <true-text-base\r\n                        size={this.textSize}\r\n                        weight='medium'>\r\n                        <slot></slot>\r\n                    </true-text-base>\r\n                    <slot name='end'></slot>\r\n                </button>\r\n            </Host>\r\n        );\r\n    }\r\n}\r\n"],"version":3}