{"file":"true-icon-button.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,aAAa,GAAG,68GAA68G;;MCUt9G,UAAU;;;;gBAQuB,WAAW;oBAInB,KAAK;mBAKN,KAAK;oBAKrB,CAAC;gBAK4B,GAAG;kBAKjB,KAAK;;;;;EAevC,WAAW;IACT,IAAI,IAAI,CAAC,KAAK,EAAE;MACd,QACEA,iBAAK,KAAK,EAAC,OAAO,IAChBA,0BAAc,KAAK,EAAC,aAAa,IAC9B,IAAI,CAAC,KAAK,CACE,CACX,EACN;KACH;GACF;EAED,MAAM;IACJ,QACEA,QAACC,UAAI,qBACY,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,IAAI,EAC5C,KAAK,EAAE;QACL,iBAAiB,EAAE,IAAI;OACxB,IAEA,IAAI,CAAC,UAAU,GAAGD,iBAAK,KAAK,EAAC,SAAS,GAAO,GAAG,IAAI,EACrDA,oBAAQ,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,IAAIE,8BAAiB,CAAC,CAAC,CAAC,IAC1FF,iBAAK,KAAK,EAAC,YAAY,GAAO,EAC9BA,uBAAW,IAAI,EAAE,IAAI,CAAC,IAAI,GAAc,CACjC,EACR,IAAI,CAAC,WAAW,EAAE,CACd,EACP;GACH;;;;;;","names":["h","Host","removeButtonFocus"],"sources":["src/components/buttons/icon-button/icon-button.scss?tag=true-icon-button&encapsulation=shadow","src/components/buttons/icon-button/icon-button.tsx"],"sourcesContent":["@use 'sass:color';\r\n@import '../../../styles//mixin/button';\r\n\r\n:host {\r\n    // Medium is the default size\r\n    --size: 40px;\r\n    --icon-font-size: calc(var(--size) / 2);\r\n\r\n    --background-opacity: 1;\r\n    --border-radius: 50%;\r\n\r\n    border-radius: var(--border-radius);\r\n\r\n    // Secondary action styling: default\r\n    --icon-color: var(--color-primary);\r\n    --bg-color: var(--bg-color-tertiary);\r\n\r\n    --color-hover: var(--color-primary);\r\n    --bg-color-hover: var(--bg-hover-tertiary);\r\n\r\n    --color-disabled: var(--color-tertiary);\r\n    --bg-color-disabled: var(--bg-color-tertiary);\r\n\r\n    --color-toggle: var(--bg-color-primary);\r\n    --bg-color-toggle: var(--color-secondary);\r\n\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n\r\n    .overlay {\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        border-radius: var(--border-radius);\r\n        background-color: rgba(0, 0, 0, 0.15);\r\n        z-index: 2;\r\n        cursor: pointer;\r\n    }\r\n\r\n    button {\r\n        @include button();\r\n\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        position: relative;\r\n\r\n        border-radius: var(--border-radius);\r\n        overflow: hidden;\r\n\r\n        width: var(--size);\r\n        height: var(--size);\r\n\r\n        color: var(--color);\r\n        transition: color #{$button-transition};\r\n\r\n        .background {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n\r\n            background-color: var(--bg-color);\r\n            opacity: var(--background-opacity);\r\n\r\n            transition: background-color #{$button-transition},\r\n                opacity #{$button-transition};\r\n\r\n            border-radius: var(--border-radius);\r\n        }\r\n\r\n        true-icon {\r\n            --width: var(--icon-width);\r\n            --height: var(--icon-height);\r\n\r\n            position: absolute;\r\n\r\n            transition: transform 0.1s ease-in-out;\r\n\r\n            font-size: var(--icon-font-size);\r\n            --color: var(--icon-color);\r\n        }\r\n    }\r\n    .badge {\r\n        background-color: var(--color-custom-brand-accent);\r\n        height: calc(var(--size) / 2);\r\n        width: calc(var(--size) / 2);\r\n        border-radius: calc(var(--size) / 2);\r\n        border: 2px solid var(--bg-color-secondary);\r\n        position: absolute;\r\n        top: calc((var(--size) / 8) * -1);\r\n        right: calc((var(--size) / 8) * -1);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n}\r\n\r\n// Medium is the default size\r\n:host([size='xs']) {\r\n    --size: 24px;\r\n}\r\n:host([size='s']) {\r\n    --size: 32px;\r\n}\r\n:host([size='l']) {\r\n    --size: 56px;\r\n}\r\n:host([size='xl']) {\r\n    --size: 60px;\r\n}\r\n\r\n// Primary Action Style\r\n:host([type='primary']) {\r\n    --icon-color: var(--color-secondary);\r\n    --bg-color: var(--bg-color-secondary);\r\n\r\n    --color-hover: var(--color-secondary);\r\n    --bg-color-hover: var(--bg-hover-secondary);\r\n\r\n    --color-disabled: var(--color-tertiary);\r\n    --bg-color-disabled: var(--bg-color-tertiary);\r\n\r\n    --color-toggle: var(--bg-color-primary);\r\n    --bg-color-toggle: var(--color-secondary);\r\n}\r\n\r\n:host([type='primary'][shadow]) {\r\n    button {\r\n        box-shadow: var(--box-shadow-key-low);\r\n    }\r\n\r\n    --icon-color: var(--color-secondary);\r\n    --bg-color: var(--bg-color-secondary);\r\n\r\n    --color-hover: var(--color-primary);\r\n    --bg-color-hover: var(--bg-color-secondary);\r\n}\r\n\r\n:host([flip='h']) {\r\n    true-icon {\r\n        transform: scale(-1, 1);\r\n    }\r\n}\r\n:host([flip='v']) {\r\n    true-icon {\r\n        transform: scale(1, -1);\r\n    }\r\n}\r\n\r\n:host(.activated:not([toggled])) {\r\n    --background-opacity: 1 !important;\r\n\r\n    button:not([disabled]) {\r\n        --icon-color: var(--color-hover);\r\n        --bg-color: var(--bg-color-hover);\r\n    }\r\n}\r\n\r\n@media (any-hover: hover) {\r\n    :host(:hover:not([toggled])) {\r\n        --background-opacity: 1 !important;\r\n\r\n        button:not([disabled]) {\r\n            --icon-color: var(--color-hover);\r\n            --bg-color: var(--bg-color-hover);\r\n        }\r\n    }\r\n}\r\n\r\n:host([disabled]) {\r\n    --background-opacity: 1 !important;\r\n\r\n    button {\r\n        box-shadow: none !important;\r\n\r\n        --icon-color: var(--color-disabled);\r\n        --bg-color: var(--bg-color-disabled);\r\n    }\r\n}\r\n\r\n:host([toggled]:not([disabled])) {\r\n    --background-opacity: 1 !important;\r\n\r\n    --icon-color: var(--color-toggle);\r\n    --bg-color: var(--bg-color-toggle);\r\n}\r\n","import { Component, h, Host, Prop } from '@stencil/core';\r\nimport { ActionType } from '../../../interface';\r\nimport { removeButtonFocus } from '../button-common';\r\nimport { IconButtonSize } from './icon-button.interface';\r\n\r\n@Component({\r\n  tag: 'true-icon-button',\r\n  styleUrl: 'icon-button.scss',\r\n  shadow: true,\r\n})\r\nexport class IconButton {\r\n  /**\r\n   * The icon to display inside the button\r\n   */\r\n  @Prop({ mutable: true }) icon: string;\r\n  /**\r\n   * The color display of the button.\r\n   */\r\n  @Prop({ reflect: true }) type: ActionType = 'secondary';\r\n  /**\r\n   * `true` if the button is disabled and cannot be interacted with.\r\n   */\r\n  @Prop({ reflect: true }) disabled = false;\r\n\r\n  /**\r\n   * `true` if button is in toggled state\r\n   */\r\n  @Prop({ reflect: true }) toggled = false;\r\n\r\n  /**\r\n   * The keyboard focus order\r\n   */\r\n  @Prop() tabindex = 0;\r\n\r\n  /**\r\n   * Size of the icon\r\n   */\r\n  @Prop({ reflect: true }) size: IconButtonSize = 'm';\r\n\r\n  /**\r\n   * `true` if a box shadow should be shown (only suports primary type)\r\n   */\r\n  @Prop({ reflect: true }) shadow = false;\r\n  /**\r\n   * Number shown in a badge in the corner of the button\r\n   */\r\n  @Prop({ mutable: true }) badge: number;\r\n  /**\r\n   * `true` if the overlay should be rendered.\r\n   */\r\n  @Prop({ reflect: true }) hasOverlay: boolean;\r\n\r\n  /**\r\n   * Flips the icon horizontally (h) of vertically (v) in css\r\n   */\r\n  @Prop({ reflect: true }) flip: 'h' | 'v';\r\n\r\n  renderBadge() {\r\n    if (this.badge) {\r\n      return (\r\n        <div class=\"badge\">\r\n          <true-subtext color=\"neutral-100\">\r\n            {this.badge}\r\n          </true-subtext>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host\r\n        aria-disabled={this.disabled ? 'true' : null}\r\n        class={{\r\n          'ion-activatable': true,\r\n        }}\r\n      >\r\n        {this.hasOverlay ? <div class=\"overlay\"></div> : null}\r\n        <button tabindex={this.tabindex} disabled={this.disabled} onClick={e => removeButtonFocus(e)}>\r\n          <div class=\"background\"></div>\r\n          <true-icon name={this.icon}></true-icon>\r\n        </button>\r\n        {this.renderBadge()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}