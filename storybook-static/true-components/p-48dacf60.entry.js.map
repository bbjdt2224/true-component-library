{"version":3,"names":["largeButtonCss","LargeButton","hostClick","event","this","disabled","preventDefault","busy","trySubmitForm","submit","element","render","h","textSize","type","textAlign","class","slot","size","name","icon"],"sources":["src/components/buttons/large-button/large-button.scss?tag=true-large-button&encapsulation=shadow","src/components/buttons/large-button/large-button.tsx"],"sourcesContent":["@import '../../../styles/mixin/button';\n\n:host {\n    display: inline-flex;\n    --button-transition: #{$button-transition};\n\n    --icon-bubble-size: 40px;\n    --side-padding: 31px;\n    --top-bottom-padding: 0;\n\n    --icon-color: var(--color-neutral-100);\n}\n\ntrue-button {\n    --height: 60px;\n    --font-size: 16px;\n\n    // Accounts for the bubble when text is centered making sure all text can be seen\n    --padding:\n        var(--top-bottom-padding)\n        calc(var(--side-padding) + var(--icon-bubble-size))\n        var(--top-bottom-padding)\n        var(--side-padding);\n\n    --border-radius: 30px;\n    --font-weight: bold;\n\n    --min-width: calc(100% - var(--icon-bubble-size));\n    width: 100%;\n}\n\n.icon-bubble {\n\n    width: var(--icon-bubble-size);\n    height: var(--icon-bubble-size);\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    right: 10px;\n    top: 10px;\n\n    background-color: var(--color-custom-brand-accent-shade);\n\n    --width: 18px;\n    transition: background-color var(--button-transition);\n    border-radius: 999rem;\n\n    true-icon {\n        color: var(--icon-color);\n    }\n}\n\n// Secondary Action Style\n:host([type=\"secondary\"]) {\n    --icon-color: var(--color-secondary);\n\n    true-button {\n        --color: var(--color-secondary);\n        --color-hover: var(--color-primary);\n        --color-disabled: var(--color-tertiary);\n\n        --bg-color: var(--bg-color-secondary);\n        --bg-color-hover: var(--bg-hover-secondary);\n        --bg-color-disabled:  var(--bg-color-primary);\n\n        --border-width: 0px;\n\n        --border-color: transparent;\n        --border-color-hover: transparent;\n        --border-color-disabled: transparent;\n    }\n\n    .icon-bubble {\n        background-color: var(--bg-hover-secondary);\n    }\n}\n\n:host([disabled]) {\n    --icon-color: var(--color-tertiary);\n    \n    .icon-bubble {\n        background-color: var(--bg-color-tertiary);\n    }\n}\n\n:host(:not([text-align=\"left\"])) {\n    width: 100%;\n\n    true-button {\n        --padding:\n            var(--top-bottom-padding)\n            calc(var(--side-padding) + var(--icon-bubble-size));\n    }\n\n}\n","import { Component, Element, h, Listen, Prop } from '@stencil/core';\nimport { ActionType } from '../../../interface';\nimport { trySubmitForm } from '../button-common';\n/**\n * @slot - Content is placed in the default slot.\n */\n@Component({\n    tag: 'true-large-button',\n    styleUrl: 'large-button.scss',\n    shadow: true\n})\nexport class LargeButton {\n    /**\n     * The icon to display on the right side of the button\n     */\n    @Prop() icon: string;\n    /**\n     * The importance of action the button is intended for (primary, secondary)\n     */\n    @Prop({ reflect: true }) type: ActionType = 'primary';\n    /**\n     * Whether or not to render the button as a submit button\n     */\n    @Prop() submit = false;\n    /**\n     * `true` if the button is disabled and cannot be interacted with.\n     */\n    @Prop({ reflect: true }) disabled = false;\n    /**\n     * `true` if the button is in a busy state.\n     */\n    @Prop() busy = false;\n    /**\n     * Whether to align the text left or center. Center is default\n     */\n    @Prop({ reflect: true }) textAlign: 'center' | 'left' = 'center';\n\n    @Element() element!: Element;\n\n    @Listen('click')\n    hostClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        if (!this.busy) {\n            trySubmitForm(this.submit, this.element);\n        }\n    }\n\n    render() {\n        return (\n            <true-button\n                textSize='m'\n                submit={this.submit}\n                disabled={this.disabled}\n                type={this.type}\n                textAlign={this.textAlign}>\n\n                <slot></slot>\n\n                <div class='icon-bubble' slot='end'>\n                    {\n                        this.busy ?\n                            <true-loading-spinner size ='l'></true-loading-spinner> :\n                            <true-icon name={this.icon}></true-icon>\n                    }\n                </div>\n\n            </true-button>\n        );\n    }\n\n}\n"],"mappings":"sFAAA,MAAMA,EAAiB,qnD,MCWVC,EAAW,M,uDAQwB,U,YAI3B,M,cAImB,M,UAIrB,M,eAIyC,Q,CAKxD,SAAAC,CAAUC,GACN,GAAIC,KAAKC,SAAU,CACfF,EAAMG,iBACN,M,CAGJ,IAAKF,KAAKG,KAAM,CACZC,EAAcJ,KAAKK,OAAQL,KAAKM,Q,EAIxC,MAAAC,GACI,OACIC,EAAA,eACIC,SAAS,IACTJ,OAAQL,KAAKK,OACbJ,SAAUD,KAAKC,SACfS,KAAMV,KAAKU,KACXC,UAAWX,KAAKW,WAEhBH,EAAA,aAEAA,EAAA,OAAKI,MAAM,cAAcC,KAAK,OAEtBb,KAAKG,KACDK,EAAA,wBAAsBM,KAAM,MAC5BN,EAAA,aAAWO,KAAMf,KAAKgB,Q"}