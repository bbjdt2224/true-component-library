{"version":3,"names":["iconPreviewCss","IconPreview","this","iconSelected","ev","icon","target","iconEl","querySelector","selectedIcon","attributes","getNamedItem","value","undefined","copyToClipboard","window","getSelection","selection","document","execCommand","codeMouseOver","text","range","createRange","selectNodeContents","removeAllRanges","addRange","codeMouseLeave","openSvg","host","location","protocol","hostname","port","open","searchIcons","searchText","inputElement","clearSearch","componentDidLoad","focus","renderPlaceholder","displayPlaceholder","length","h","class","large","renderIcons","icons","split","forEach","includes","toLowerCase","push","type","active","onClick","name","render","Host","color","autofocus","ref","onKeyUp","placeholder","visible","onMouseOver","onMouseLeave","width","height","viewBox","d"],"sources":["src/components/icon/icon-preview/icon-preview.scss?tag=true-icon-preview&encapsulation=shadow","src/components/icon/icon-preview/icon-preview.tsx"],"sourcesContent":[":host {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    overflow: scroll;\n    height: 90vh;\n    position: relative;\n    --color-primary: black;\n    width: 100%;\n    min-width: 850px;\n}\n\n.icons {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(70px, 1fr));\n    grid-auto-rows: minmax(70px, auto);\n    grid-gap: .5em;\n    padding-bottom: 60px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 80%;\n}\n\n.svg-btn {\n    display: flex;\n    align-items: center;\n}\n\n.icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 8px;\n    font-size: 16px;\n    border: 2px solid transparent;\n\n    animation-name: shadowOut;\n    animation-duration: .3s;\n    animation-fill-mode: forwards;\n\n    &:active,\n    &:focus {\n        outline: 0;\n    }\n\n    &:hover,\n    &:focus {\n        animation-name: shadowIn;\n        animation-duration: .3s;\n        animation-fill-mode: forwards;\n    }\n\n    &.active {\n        background-color: rgb(236, 240, 246);\n    }\n}\n\ntrue-icon {\n    user-select: none;\n    pointer-events: none;\n}\n\n.search-input {\n    width: 630px;\n\n    true-icon.search {\n        position: absolute;\n        transform: translate(100%, 150%);\n    }\n\n    .clear-btn {\n        position: absolute;\n        right: 0;\n        appearance: none;\n        top: 20px;\n        border-radius: 9999px;\n        background: var(--abbott-color-dark-gray-offset);\n        border-color: transparent;\n        -webkit-appearance: none;\n        font-size: 10px;\n        width: 22px;\n        height: 22px;\n        display: flex;\n        align-items: center;\n        transform: translateX(-100%);\n        cursor: pointer;\n        transition: all .3s;\n        opacity: 0;\n        pointer-events: none;\n\n        &:hover {\n            background: var(--abbott-color-light-gray);\n        }\n\n        &.visible {\n            opacity: 1;\n            pointer-events: all;\n        }\n    }\n}\n\n@keyframes shadowIn {\n    0% {\n        box-shadow: 0;\n    }\n\n    100% {\n        box-shadow: 0 3px 6px 0 rgba(0, 0, 0, .1), 0 1px 3px 0 rgba(0, 0, 0, .08);\n    }\n}\n\n@keyframes shadowOut {\n    0% {\n        box-shadow: 0 3px 6px 0 rgba(0, 0, 0, .1), 0 1px 3px 0 rgba(0, 0, 0, .08);\n    }\n\n    100% {\n        box-shadow: 0;\n    }\n}\n\n.toast-bar {\n    left: 0;\n    bottom: 0;\n    padding: 12px 0;\n    width: 100%;\n    transform: translateY(100%);\n    visibility: hidden;\n\n    &.active {\n        transition: all .3s;\n        transform: translateY(-20px);\n        visibility: visible;\n        position: sticky;\n    }\n\n    &-inner {\n        margin: 20px;\n        padding: 10px;\n        border-radius: 8px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        background-color: white;\n        box-shadow: 0 16px 32px 0 rgba(0, 0, 0, .1), 0 8px 16px 0 rgba(0, 0, 0, .08);\n    }\n\n    .selected-icon {\n        margin-left: 20px;\n    }\n\n    .actions {\n        display: flex;\n        align-items: flex-end;\n        padding-right: 20px;\n    }\n\n    .download-btn {\n        display: flex;\n        align-items: center;\n        margin-left: 20px;\n\n        true-icon {\n            margin-right: 20px;\n        }\n    }\n\n    code {\n        overflow-x: auto;\n        position: relative;\n        box-sizing: border-box;\n        display: flex;\n        align-items: center;\n        font-size: 14px;\n        line-height: 14px;\n        height: 32px;\n        padding: 0 12px;\n        cursor: text;\n        overflow: hidden;\n        background: #363E49;\n        border-radius: 4px;\n        color: var(--color-white);\n\n        .yellow {\n            color: #E5DB63;\n        }\n\n        .green {\n            color: #96E500;\n        }\n\n        .blue {\n            color: #46D8EE;\n        }\n\n        span {\n            white-space: nowrap;\n            pointer-events: none;\n        }\n    }\n}\n\n.placeholder {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\ninput {\n    transition: box-shadow .3s;\n    font-size: 16px;\n    line-height: 22px;\n    padding: 20px 50px;\n    background-color: var(--color-white);\n    box-shadow: 0 3px 6px 0 rgba(0, 0, 0, .1), 0 1px 3px 0 rgba(0, 0, 0, .08);\n    width: 100%;\n    font-weight: 400;\n    border: 0;\n    outline: 0;\n    border-radius: 6px;\n    box-sizing: border-box;\n    display: block;\n    -webkit-appearance: none;\n    margin-bottom: 20px;\n}\n","import { Component, h, Host, Prop, State } from '@stencil/core';\n\n@Component({\n    tag: 'true-icon-preview',\n    styleUrl: 'icon-preview.scss',\n    shadow: true\n})\nexport class IconPreview {\n\n    @Prop({ mutable: true }) icons: string;\n\n    @State() selectedIcon: string;\n\n    @State() searchText = '';\n    @State() displayPlaceholder = false;\n\n    private inputElement: HTMLInputElement;\n\n    componentDidLoad() {\n        this.inputElement.focus();\n    }\n\n    iconSelected = (ev) => {\n        const icon = ev.target as HTMLSpanElement;\n        const iconEl = icon.querySelector('true-icon');\n        if (this.selectedIcon === iconEl.attributes.getNamedItem('name').value) {\n            this.selectedIcon = undefined;\n        } else {\n            this.selectedIcon = iconEl.attributes.getNamedItem('name').value;\n        }\n    }\n\n    copyToClipboard = () => {\n        if (window.getSelection) {\n            const selection = window.getSelection();\n            if (selection) {\n                document.execCommand('copy');\n            }\n        }\n    }\n\n    codeMouseOver = (ev) => {\n        const text = ev.target.querySelector('span');\n        if (window.getSelection) {\n            const selection = window.getSelection();\n            const range = document.createRange();\n            range.selectNodeContents(text);\n            selection.removeAllRanges();\n            selection.addRange(range);\n        }\n    }\n\n    codeMouseLeave = () => {\n        if (window.getSelection) {\n            const selection = window.getSelection();\n            selection.removeAllRanges();\n        }\n    }\n\n    openSvg = () => {\n        const host = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\n        window.open(`${host}/true-components/icons/${this.selectedIcon}.svg`, '_blank');\n    }\n\n    searchIcons = () => {\n        this.searchText = this.inputElement.value;\n    }\n\n    clearSearch = () => {\n        this.searchText = '';\n        this.inputElement.value = '';\n    }\n\n    renderPlaceholder() {\n        if (this.displayPlaceholder && this.searchText.length > 0) {\n            return (\n                <div class='placeholder'>\n                    <true-heading large>No results for \"{this.searchText}\"</true-heading>\n                </div>\n            );\n        }\n    }\n\n    renderIcons() {\n        const icons = [];\n        this.icons.split(',').forEach(icon => {\n            if (icon.includes(this.searchText.toLowerCase())) {\n                icons.push(\n                    <button type='button' class={{\n                        icon: true,\n                        active: this.selectedIcon === icon\n                    }}\n                        onClick={this.iconSelected}>\n                        <true-icon name={icon}></true-icon>\n                    </button>\n                );\n            }\n        });\n        // Causes a re-render of the component\n        this.displayPlaceholder = icons.length === 0;\n        return icons;\n    }\n\n    render() {\n        return (\n            <Host>\n                <div class='search-input'>\n                    <true-icon class='search' color='primary' name='search'></true-icon>\n                    <input type='text'\n                        autofocus\n                        ref={ref => this.inputElement = ref}\n                        onKeyUp={this.searchIcons}\n                        placeholder='Search icons...' />\n                    <button class={{\n                        'clear-btn': true,\n                        visible: this.searchText.length > 0\n                    }} onClick={this.clearSearch}>\n                        <true-icon name='x'></true-icon>\n                    </button>\n                </div>\n                <div class='icons'>\n                    {this.renderIcons()}\n                </div>\n                {this.renderPlaceholder()}\n                <div class={{\n                    'toast-bar': true,\n                    active: this.selectedIcon != null\n                }}>\n                    <div class='toast-bar-inner'>\n                        <true-text class='selected-icon'>{this.selectedIcon}</true-text>\n                        <div class='actions'>\n                            <div>\n                                <true-subtext color='primary'>WEB COMPONENT CODE</true-subtext>\n                                <code\n                                    onMouseOver={this.codeMouseOver}\n                                    onMouseLeave={this.codeMouseLeave}\n                                    onClick={this.copyToClipboard}>\n                                    <span class='hover-highlight'>\n                                        &lt;\n                                        <span class='blue'>true-icon</span>\n                                        &nbsp;\n                                        <span class='green'>name</span>\n                                        =\n                                        <span class='yellow'>\"{this.selectedIcon}\"</span>\n                                        &gt;&lt;/\n                                        <span class='blue'>true-icon</span>&gt;\n                                    </span>\n                                </code>\n                            </div>\n                            <div class='download-btn'>\n                                <true-icon color='primary' name={this.selectedIcon}></true-icon>\n                                <true-button color='brand-primary-blue' onClick={this.openSvg}>\n                                    <div class='svg-btn'>\n                                        <svg width='20px' height='20px' viewBox='0 0 32 32'>\n                                            <path d='M26 12.469h-5.712v-8.469h-8.575v8.469h-5.713l10 9.881 10-9.881zM6 25.175v2.825h20v-2.825h-20z'></path>\n                                        </svg>\n                                        SVG\n                                    </div>\n                                </true-button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n\n}\n"],"mappings":"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"}