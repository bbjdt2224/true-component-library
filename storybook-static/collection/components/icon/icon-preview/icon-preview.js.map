{"version":3,"file":"icon-preview.js","sourceRoot":"","sources":["../../../../src/components/icon/icon-preview/icon-preview.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Host, Prop, State } from '@stencil/core';\n\n@Component({\n    tag: 'true-icon-preview',\n    styleUrl: 'icon-preview.scss',\n    shadow: true\n})\nexport class IconPreview {\n\n    @Prop({ mutable: true }) icons: string;\n\n    @State() selectedIcon: string;\n\n    @State() searchText = '';\n    @State() displayPlaceholder = false;\n\n    private inputElement: HTMLInputElement;\n\n    componentDidLoad() {\n        this.inputElement.focus();\n    }\n\n    iconSelected = (ev) => {\n        const icon = ev.target as HTMLSpanElement;\n        const iconEl = icon.querySelector('true-icon');\n        if (this.selectedIcon === iconEl.attributes.getNamedItem('name').value) {\n            this.selectedIcon = undefined;\n        } else {\n            this.selectedIcon = iconEl.attributes.getNamedItem('name').value;\n        }\n    }\n\n    copyToClipboard = () => {\n        if (window.getSelection) {\n            const selection = window.getSelection();\n            if (selection) {\n                document.execCommand('copy');\n            }\n        }\n    }\n\n    codeMouseOver = (ev) => {\n        const text = ev.target.querySelector('span');\n        if (window.getSelection) {\n            const selection = window.getSelection();\n            const range = document.createRange();\n            range.selectNodeContents(text);\n            selection.removeAllRanges();\n            selection.addRange(range);\n        }\n    }\n\n    codeMouseLeave = () => {\n        if (window.getSelection) {\n            const selection = window.getSelection();\n            selection.removeAllRanges();\n        }\n    }\n\n    openSvg = () => {\n        const host = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\n        window.open(`${host}/true-components/icons/${this.selectedIcon}.svg`, '_blank');\n    }\n\n    searchIcons = () => {\n        this.searchText = this.inputElement.value;\n    }\n\n    clearSearch = () => {\n        this.searchText = '';\n        this.inputElement.value = '';\n    }\n\n    renderPlaceholder() {\n        if (this.displayPlaceholder && this.searchText.length > 0) {\n            return (\n                <div class='placeholder'>\n                    <true-heading large>No results for \"{this.searchText}\"</true-heading>\n                </div>\n            );\n        }\n    }\n\n    renderIcons() {\n        const icons = [];\n        this.icons.split(',').forEach(icon => {\n            if (icon.includes(this.searchText.toLowerCase())) {\n                icons.push(\n                    <button type='button' class={{\n                        icon: true,\n                        active: this.selectedIcon === icon\n                    }}\n                        onClick={this.iconSelected}>\n                        <true-icon name={icon}></true-icon>\n                    </button>\n                );\n            }\n        });\n        // Causes a re-render of the component\n        this.displayPlaceholder = icons.length === 0;\n        return icons;\n    }\n\n    render() {\n        return (\n            <Host>\n                <div class='search-input'>\n                    <true-icon class='search' color='primary' name='search'></true-icon>\n                    <input type='text'\n                        autofocus\n                        ref={ref => this.inputElement = ref}\n                        onKeyUp={this.searchIcons}\n                        placeholder='Search icons...' />\n                    <button class={{\n                        'clear-btn': true,\n                        visible: this.searchText.length > 0\n                    }} onClick={this.clearSearch}>\n                        <true-icon name='x'></true-icon>\n                    </button>\n                </div>\n                <div class='icons'>\n                    {this.renderIcons()}\n                </div>\n                {this.renderPlaceholder()}\n                <div class={{\n                    'toast-bar': true,\n                    active: this.selectedIcon != null\n                }}>\n                    <div class='toast-bar-inner'>\n                        <true-text class='selected-icon'>{this.selectedIcon}</true-text>\n                        <div class='actions'>\n                            <div>\n                                <true-subtext color='primary'>WEB COMPONENT CODE</true-subtext>\n                                <code\n                                    onMouseOver={this.codeMouseOver}\n                                    onMouseLeave={this.codeMouseLeave}\n                                    onClick={this.copyToClipboard}>\n                                    <span class='hover-highlight'>\n                                        &lt;\n                                        <span class='blue'>true-icon</span>\n                                        &nbsp;\n                                        <span class='green'>name</span>\n                                        =\n                                        <span class='yellow'>\"{this.selectedIcon}\"</span>\n                                        &gt;&lt;/\n                                        <span class='blue'>true-icon</span>&gt;\n                                    </span>\n                                </code>\n                            </div>\n                            <div class='download-btn'>\n                                <true-icon color='primary' name={this.selectedIcon}></true-icon>\n                                <true-button color='brand-primary-blue' onClick={this.openSvg}>\n                                    <div class='svg-btn'>\n                                        <svg width='20px' height='20px' viewBox='0 0 32 32'>\n                                            <path d='M26 12.469h-5.712v-8.469h-8.575v8.469h-5.713l10 9.881 10-9.881zM6 25.175v2.825h20v-2.825h-20z'></path>\n                                        </svg>\n                                        SVG\n                                    </div>\n                                </true-button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n\n}\n"]}