{"version":3,"file":"large-icon-button.js","sourceRoot":"","sources":["../../../../src/components/buttons/large-icon-button/large-icon-button.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAQzD,MAAM,OAAO,eAAe;;;gBAQoB,WAAW;oBAInB,KAAK;;EAEzC,MAAM;IACF,OAAO,CACH,EAAC,IAAI,qBAAgB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI;MAC7C,wBACG,IAAI,EAAC,IAAI,EACT,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,GACR;MACnB,sBAAgB,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAC,GAAG;QACpC,eAAa,CACA,CACd,CACV,CAAA;EACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, h, Host, Prop } from '@stencil/core';\nimport { ActionType } from '../../../interface';\n\n@Component({\n    tag: 'true-large-icon-button',\n    styleUrl: 'large-icon-button.scss',\n    shadow: true\n})\nexport class LargeIconButton {\n    /**\n     * The icon to display inside the button\n     */\n    @Prop({ mutable: true }) icon: string;\n    /**\n     * The color display of the button.\n     */\n    @Prop({ reflect: true }) type: ActionType = 'secondary';\n    /**\n     * `true` if the button is disabled and cannot be interacted with.\n     */\n    @Prop({ reflect: true }) disabled = false;\n\n    render() {\n        return (\n            <Host aria-disabled={this.disabled ? 'true' : null}>\n                 <true-icon-button\n                    size='xl'\n                    type={this.type}\n                    icon={this.icon}\n                    disabled={this.disabled}>\n                </true-icon-button>\n                <true-text-base weight='medium' size='s'>\n                    <slot></slot>\n                </true-text-base>\n            </Host>\n        )\n    }\n}\n"]}