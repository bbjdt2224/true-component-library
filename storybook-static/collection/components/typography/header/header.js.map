{"version":3,"file":"header.js","sourceRoot":"","sources":["../../../../src/components/typography/header/header.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AASnD,MAAM,OAAO,IAAI;;IACP,YAAO,GAAuC;MACpD,EAAE,EAAE,MAAM;MACV,EAAE,EAAE,KAAK;MACT,EAAE,EAAE,IAAI;MACR,EAAE,EAAE,GAAG;KACR,CAAC;gBAK0C,IAAI;kBAKF,QAAQ;;;;EAatD,MAAM;IACJ,OAAO,CACL,sBAAgB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK;MAC5G,eAAa,CACE,CAClB,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Prop } from '@stencil/core';\r\nimport { TextColor, TextSize, TextWeight } from '../text-base/text-base.interface';\r\nimport { HeaderSize } from './header.interface';\r\n\r\n@Component({\r\n  tag: 'true-header',\r\n  styleUrl: 'header.scss',\r\n  shadow: true,\r\n})\r\nexport class Text {\r\n  private sizeMap: { [size in HeaderSize]: TextSize } = {\r\n    h1: 'xxxl',\r\n    h2: 'xxl',\r\n    h3: 'xl',\r\n    h4: 'l',\r\n  };\r\n\r\n  /**\r\n   * The size of the header\r\n   */\r\n  @Prop({ reflect: true }) size: HeaderSize = 'h1';\r\n\r\n  /**\r\n   * Passthrough prop for weight of the header\r\n   */\r\n  @Prop({ reflect: true }) weight: TextWeight = 'medium';\r\n\r\n  /**\r\n   * Passthrough prop for the color of the header\r\n   */\r\n  @Prop({ reflect: true }) color: TextColor;\r\n\r\n  /**\r\n   * The maximum lines to display before truncating the header.\r\n   * Default behavior shows all lines of text with no truncation.\r\n   */\r\n  @Prop({ reflect: true }) maxLines: string;\r\n\r\n  render() {\r\n    return (\r\n      <true-text-base size={this.sizeMap[this.size]} weight={this.weight} maxLines={this.maxLines} color={this.color}>\r\n        <slot></slot>\r\n      </true-text-base>\r\n    );\r\n  }\r\n}\r\n"]}