{"version":3,"file":"text-base.js","sourceRoot":"","sources":["../../../../src/components/typography/text-base/text-base.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAShE,MAAM,OAAO,QAAQ;;gBAKyB,GAAG;;;;;;EAqB7C,gBAAgB;IACZ,2CAA2C;IAC3C,qBAAqB,CAAC,GAAG,EAAE;MACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,CAAC,CAAC,CAAA;EACN,CAAC;EAED,MAAM;IACF,MAAM,KAAK,GAAG,EAAE,CAAA;IAEhB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;MACvB,KAAK,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAA;KACvC;IAED,IAAI,IAAI,CAAC,KAAK,EAAE;MACZ,KAAK,CAAC,cAAc,CAAC,GAAG,eAAe,IAAI,CAAC,KAAK,GAAG,CAAA;KACvD;IAED,OAAO,CACH,EAAC,IAAI,IAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;MAClD;QAAM,eAAa,CAAO,CACvB,CACV,CAAA;EACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEJ","sourcesContent":["import { Component, h, Host, Prop, State } from \"@stencil/core\";\r\nimport { TextColor, TextSize, TextWeight } from \"./text-base.interface\";\r\n\r\n\r\n@Component({\r\n    tag: 'true-text-base',\r\n    styleUrl: 'text-base.scss',\r\n    shadow: true\r\n})\r\nexport class TextBase {\r\n\r\n    /**\r\n     * Size of the text\r\n     */\r\n    @Prop({ reflect: true }) size: TextSize = 'm'\r\n\r\n    /**\r\n     * Primary color of the text\r\n     * Uses predefined css variables\r\n     */\r\n    @Prop({ reflect: true }) color: TextColor;\r\n\r\n    /**\r\n     * Weight of the text\r\n     */\r\n    @Prop({ reflect: true }) weight: TextWeight;\r\n\r\n    /**\r\n     * Maximum lines to display before truncating the text\r\n     * If no value is given all lines will show\r\n     */\r\n    @Prop({ reflect: true }) maxLines: string;\r\n\r\n    @State() loaded: boolean;\r\n\r\n    componentDidLoad() {\r\n        // Set loaded to true so colors are correct\r\n        requestAnimationFrame(() => {\r\n            this.loaded = true;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const style = {}\r\n\r\n        if (this.maxLines != null) {\r\n            style['--max-lines'] = this.maxLines\r\n        }\r\n\r\n        if (this.color) {\r\n            style['--text-color'] = `var(--color-${this.color})`\r\n        }\r\n\r\n        return (\r\n            <Host style={style} class={this.loaded ? 'loaded' : ''}>\r\n                <span><slot></slot></span>\r\n            </Host>\r\n        )\r\n    }\r\n\r\n}"]}