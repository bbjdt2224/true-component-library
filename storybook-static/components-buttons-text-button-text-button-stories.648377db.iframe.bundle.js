"use strict";(self.webpackChunktrue_components=self.webpackChunktrue_components||[]).push([[887],{"./src/components/buttons/text-button/text-button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,IconEnd:()=>IconEnd,IconStart:()=>IconStart,TwoIcons:()=>TwoIcons,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var lit__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lit/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Buttons/Text Button",component:"true-text-button",args:{disabled:!1,type:"primary",size:"s",weight:"medium",location:"",newTab:!1,focusable:!0},argTypes:{disabled:{type:"boolean",description:"If the button is disabled",table:{defaultValue:{summary:"false"},disable:!0}},type:{type:"string",description:"Intended action of the button",options:["primary","secondary","tertiary","brand"],control:{type:"select"},disable:!0,table:{defaultValue:{summary:"primary"},type:{summary:"primary | secondary | tertiary | brand"}}},size:{type:"string",description:"Size of the button",options:["s","m","l","xl"],control:{type:"select"},table:{defaultValue:{summary:"s"},type:{summary:"s | m | l | xl"}}},weight:{type:"string",description:"Size of the button",options:["extra-bold","bold","medium","regular"],control:{type:"select"},table:{defaultValue:{summary:"medium"},type:{summary:"extra-bold | bold | medium | regular"}}},location:{type:"string",description:"A link href, if provided the button will render as a link using a tag"},newTab:{type:"boolean",description:"Set to true if link should open in a new tab"},focusable:{type:"boolean",description:"If element is allowed to be focusable"}}},Default={render:args=>lit__WEBPACK_IMPORTED_MODULE_0__.dy`<true-text-button type=${args.type} size=${args.size} weight=${args.weight} location=${args.location} new-tab=${args.newTab} focusable=${args.focusable}
      >Default</true-text-button
    >`},IconEnd={render:args=>lit__WEBPACK_IMPORTED_MODULE_0__.dy`<true-text-button type=${args.type} size=${args.size} weight=${args.weight} location=${args.location} new-tab=${args.newTab} focusable=${args.focusable}
      >Icon End<true-icon slot="end" name="right"></true-icon
    ></true-text-button>`},IconStart={render:args=>lit__WEBPACK_IMPORTED_MODULE_0__.dy`<true-text-button type=${args.type} size=${args.size} weight=${args.weight} location=${args.location} new-tab=${args.newTab} focusable=${args.focusable}
      >Icon Start<true-icon slot="start" name="chevron"></true-icon
    ></true-text-button>`},TwoIcons={render:args=>lit__WEBPACK_IMPORTED_MODULE_0__.dy`<true-text-button type=${args.type} size=${args.size} weight=${args.weight} location=${args.location} new-tab=${args.newTab} focusable=${args.focusable}
      >Two Icons<true-icon slot="start" name="chevron"></true-icon><true-icon slot="end" name="right"></true-icon
    ></true-text-button>`},Disabled={render:args=>lit__WEBPACK_IMPORTED_MODULE_0__.dy`<true-text-button disabled>Disabled</true-text-button>`};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => html`<true-text-button type=${args.type} size=${args.size} weight=${args.weight} location=${args.location} new-tab=${args.newTab} focusable=${args.focusable}\n      >Default</true-text-button\n    >`\n}",...Default.parameters?.docs?.source}}},IconEnd.parameters={...IconEnd.parameters,docs:{...IconEnd.parameters?.docs,source:{originalSource:'{\n  render: args => html`<true-text-button type=${args.type} size=${args.size} weight=${args.weight} location=${args.location} new-tab=${args.newTab} focusable=${args.focusable}\n      >Icon End<true-icon slot="end" name="right"></true-icon\n    ></true-text-button>`\n}',...IconEnd.parameters?.docs?.source}}},IconStart.parameters={...IconStart.parameters,docs:{...IconStart.parameters?.docs,source:{originalSource:'{\n  render: args => html`<true-text-button type=${args.type} size=${args.size} weight=${args.weight} location=${args.location} new-tab=${args.newTab} focusable=${args.focusable}\n      >Icon Start<true-icon slot="start" name="chevron"></true-icon\n    ></true-text-button>`\n}',...IconStart.parameters?.docs?.source}}},TwoIcons.parameters={...TwoIcons.parameters,docs:{...TwoIcons.parameters?.docs,source:{originalSource:'{\n  render: args => html`<true-text-button type=${args.type} size=${args.size} weight=${args.weight} location=${args.location} new-tab=${args.newTab} focusable=${args.focusable}\n      >Two Icons<true-icon slot="start" name="chevron"></true-icon><true-icon slot="end" name="right"></true-icon\n    ></true-text-button>`\n}',...TwoIcons.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  render: args => html`<true-text-button disabled>Disabled</true-text-button>`\n}",...Disabled.parameters?.docs?.source}}};const __namedExportsOrder=["Default","IconEnd","IconStart","TwoIcons","Disabled"]}}]);